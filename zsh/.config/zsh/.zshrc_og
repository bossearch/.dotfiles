# shell prompt
#eval "$(starship init zsh)"
#eval "$(oh-my-posh init zsh --config $HOME/.config/ohmypost.toml)"

# addhistory tweak
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

# auto load plugin
function plugin-load {
	local repo plugdir initfile initfiles=()
	: ${ZPLUGINDIR:=${ZDOTDIR:-~/.config/zsh}/plugins}
	for repo in $@; do
		plugdir=$ZPLUGINDIR/${repo:t}
		initfile=$plugdir/${repo:t}.plugin.zsh
		if [[ ! -d $plugdir ]]; then
			echo "Cloning $repo..."
			git clone -q --depth 1 --recursive --shallow-submodules \
				https://github.com/$repo $plugdir
		fi
		if [[ ! -e $initfile ]]; then
			initfiles=($plugdir/*.{plugin.zsh,zsh-theme,zsh,sh}(N))
			(( $#initfiles )) || { echo >&2 "No init file '$repo'." && continue }
			ln -sf $initfiles[1] $initfile
		fi
		fpath+=$plugdir
		(( $+functions[zsh-defer] )) && zsh-defer . $initfile || . $initfile
	done
}

# list of github repos of plugins
repos=(
	skywind3000/z.lua
	romkatv/zsh-defer
	zsh-users/zsh-autosuggestions
	zsh-users/zsh-completions
	zsh-users/zsh-history-substring-search
	zdharma-continuum/fast-syntax-highlighting
	MichaelAquilina/zsh-auto-notify
#	softmoth/zsh-vim-mode
#	kazhala/dotbare
)
plugin-load $repos

# z.lua
eval "$(lua ~/.config/zsh/.zlua --init zsh)"

# zsh-completions
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# zsh-auto-notiy
export AUTO_NOTIFY_THRESHOLD=30 # Set threshold to 30 seconds
export AUTO_NOTIFY_IGNORE=("yy" "yazi" "man" "sleep" "nvim")

# zsh-vim-mode


# Keybindings
bindkey -v
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
#bindkey "^[[A" history-beginning-search-backward
#bindkey "^[[B" history-beginning-search-forward

####

# vi mode
bindkey -v
export KEYTIMEOUT=1

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

## HISTORY
HISTFILE=~/.config/zsh/.zsh_history
HISTSIZE=1200000
SAVEHIST=1000000
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups

# Tweak
alias ls='ls --color'
alias pac='sudo pacman'
alias par='paru'
alias execzsh="source ~/.config/zsh/.zshrc"
alias editzsh="nvim ~/.config/zsh/.zshrc"
# yazi
function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Function to set dynamic title alacritty
## Function to set terminal title to the command being executed
function preexec() {
  local command="$1"
  printf "\e]0;%s\a" "$command"
}

## function to set terminal title to the current directory
function precmd() {
  # only set the title to the current directory if no command is running
  if [[ -z "$zsh_command" || "$zsh_command" == "preexec"* ]]; then
    printf "\e]0;%s\a" "${pwd/#$home/~}"
  fi
}

## register functions
precmd_functions+=(precmd)
preexec_functions+=(preexec)

# remove highlighted '%' symbol on zsh
PROMPT_EOL_MARK=
